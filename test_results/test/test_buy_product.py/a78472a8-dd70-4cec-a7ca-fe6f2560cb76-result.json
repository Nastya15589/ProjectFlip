{"name": "test_buy_product_1", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=131.0.6778.264); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x0058FD53+23747]\n\t(No symbol) [0x00517D54]\n\t(No symbol) [0x003EBE53]\n\t(No symbol) [0x003F196B]\n\t(No symbol) [0x003F387A]\n\t(No symbol) [0x003F38F7]\n\t(No symbol) [0x00431752]\n\t(No symbol) [0x00430960]\n\t(No symbol) [0x004260E9]\n\t(No symbol) [0x00451DFC]\n\t(No symbol) [0x004259A4]\n\t(No symbol) [0x00452094]\n\t(No symbol) [0x0046B41E]\n\t(No symbol) [0x00451B96]\n\t(No symbol) [0x00423F3C]\n\t(No symbol) [0x00424EBD]\n\tGetHandleVerifier [0x0086AC73+3017699]\n\tGetHandleVerifier [0x0087B93B+3086507]\n\tGetHandleVerifier [0x008740F2+3055714]\n\tGetHandleVerifier [0x00625AF0+637536]\n\t(No symbol) [0x00520A5D]\n\t(No symbol) [0x0051DA28]\n\t(No symbol) [0x0051DBC5]\n\t(No symbol) [0x005107F0]\n\tBaseThreadInitThunk [0x764DFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7753809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7753806E+238]", "trace": "set_up = None, set_group = None\n\n    @allure.description(\"Test buy product 1\")\n    def test_buy_product_1(set_up, set_group):\n        \"\"\"Тест покупки товара\"\"\"\n        options = webdriver.ChromeOptions()\n        driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()), options=options)\n        print(\"Start test 1\")\n    \n        \"\"\" Авторизация \"\"\"\n        login = LoginPage(driver)\n        login.authorization()       # Проходим авторизацию\n    \n        \"\"\" Главная страница \"\"\"\n        mp = MainPage(driver)\n        mp.select_catalog_section()     # Выбираем раздел в каталоге\n    \n        \"\"\" Раздел Женской одежды \"\"\"\n        wcp = WomenClothingPage(driver)\n>       wcp.select_product()        # Выбираем продукт\n\ntests\\test_buy_product.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\women_clothing_page.py:127: in select_product\n    self.click_product()        # Выбираем продукт\npages\\women_clothing_page.py:109: in click_product\n    self.get_product().click()\n..\\mainProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\mainProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\mainProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000019C21E9AA80>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7753809E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7753806E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=131.0.6778.264); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0058FD53+23747]\nE       \t(No symbol) [0x00517D54]\nE       \t(No symbol) [0x003EBE53]\nE       \t(No symbol) [0x003F196B]\nE       \t(No symbol) [0x003F387A]\nE       \t(No symbol) [0x003F38F7]\nE       \t(No symbol) [0x00431752]\nE       \t(No symbol) [0x00430960]\nE       \t(No symbol) [0x004260E9]\nE       \t(No symbol) [0x00451DFC]\nE       \t(No symbol) [0x004259A4]\nE       \t(No symbol) [0x00452094]\nE       \t(No symbol) [0x0046B41E]\nE       \t(No symbol) [0x00451B96]\nE       \t(No symbol) [0x00423F3C]\nE       \t(No symbol) [0x00424EBD]\nE       \tGetHandleVerifier [0x0086AC73+3017699]\nE       \tGetHandleVerifier [0x0087B93B+3086507]\nE       \tGetHandleVerifier [0x008740F2+3055714]\nE       \tGetHandleVerifier [0x00625AF0+637536]\nE       \t(No symbol) [0x00520A5D]\nE       \t(No symbol) [0x0051DA28]\nE       \t(No symbol) [0x0051DBC5]\nE       \t(No symbol) [0x005107F0]\nE       \tBaseThreadInitThunk [0x764DFCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x7753809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7753806E+238]\n\n..\\mainProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: StaleElementReferenceException"}, "description": "Test buy product 1", "steps": [{"name": "Authorization", "status": "passed", "start": 1736550720461, "stop": 1736550734514}, {"name": "Select catalog section", "status": "passed", "start": 1736550734514, "stop": 1736550741161}, {"name": "Select product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=131.0.6778.264); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x0058FD53+23747]\n\t(No symbol) [0x00517D54]\n\t(No symbol) [0x003EBE53]\n\t(No symbol) [0x003F196B]\n\t(No symbol) [0x003F387A]\n\t(No symbol) [0x003F38F7]\n\t(No symbol) [0x00431752]\n\t(No symbol) [0x00430960]\n\t(No symbol) [0x004260E9]\n\t(No symbol) [0x00451DFC]\n\t(No symbol) [0x004259A4]\n\t(No symbol) [0x00452094]\n\t(No symbol) [0x0046B41E]\n\t(No symbol) [0x00451B96]\n\t(No symbol) [0x00423F3C]\n\t(No symbol) [0x00424EBD]\n\tGetHandleVerifier [0x0086AC73+3017699]\n\tGetHandleVerifier [0x0087B93B+3086507]\n\tGetHandleVerifier [0x008740F2+3055714]\n\tGetHandleVerifier [0x00625AF0+637536]\n\t(No symbol) [0x00520A5D]\n\t(No symbol) [0x0051DA28]\n\t(No symbol) [0x0051DBC5]\n\t(No symbol) [0x005107F0]\n\tBaseThreadInitThunk [0x764DFCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7753809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7753806E+238]\n\n", "trace": "  File \"C:\\Users\\UserNN\\PycharmProjects\\pythonLessons\\ProjectFlip\\pages\\women_clothing_page.py\", line 127, in select_product\n    self.click_product()        # Выбираем продукт\n    ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\UserNN\\PycharmProjects\\pythonLessons\\ProjectFlip\\pages\\women_clothing_page.py\", line 109, in click_product\n    self.get_product().click()\n  File \"C:\\Users\\UserNN\\PycharmProjects\\pythonLessons\\mainProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\UserNN\\PycharmProjects\\pythonLessons\\mainProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\UserNN\\PycharmProjects\\pythonLessons\\mainProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\UserNN\\PycharmProjects\\pythonLessons\\mainProject\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1736550741161, "stop": 1736550761306}], "attachments": [{"name": "stdout", "source": "2ad2c16d-5ddf-484c-a921-3086c305fd72-attachment.txt", "type": "text/plain"}], "start": 1736550717084, "stop": 1736550761310, "uuid": "c010efc3-ed52-4139-924d-79bab1190ba9", "historyId": "921e569ef0e667b7ca50b3357f391e4e", "testCaseId": "921e569ef0e667b7ca50b3357f391e4e", "fullName": "tests.test_buy_product#test_buy_product_1", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_buy_product"}, {"name": "host", "value": "DESKTOP-VIUTVQJ"}, {"name": "thread", "value": "7452-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_buy_product"}]}